c
r.errors
r = assigns(:recipe)
assigns(:recipe)
dish.errors
dish
c
params[:recipe][:type]
@recipe
c
@recipe
params[:recipe][:type]
c
o.errors
r.valid?
r.valid
r.errors
o = assigns(:order)
c
user.role.orderables.size
user.role.orderables
user.orderables
c
flash
c
flash
c
flash
c
flash[:error]
flash.now[:warning]
flash.now[:error]
c
flash
flash.now[:error]
flash[:error]
flash.now
flash
c
flash
orderable.buyable
orderable
c
orderable.buyable.reload
orderable.buyable
orderable.reload.send(orderable_status)
orderable_status
orderable.reload
orderable
c
@orderable.buyable
@orderable.buyable.milktea_addons
@orderable.milktea_orderable.milktea_addons
@orderable
c
assigns(:milktea_orderable).milktea_addons
assigns(:milktea_orderable).orderable
assigns(:milktea_orderable)
m = assigns(:milktea_orderable)
c
r
r = assigns(:recipe)
c
r.errors
r = assigns(:recipe)
c
r.errors
r = assigns(:recipe).er
c
@milktea
c
shopper
c
shopper
c
shopper
c
shopper
c
shopper
shopper = @shopper_empty.role
@shopper_empty.role
@shopper_empty
shopper
c
@shopper_empty.role
@shopper_empty
c
mo.orderable
mo
flash
mo.milktea_addons
mo = assigns(:milktea_orderable).
c
mo.milktea_addons
mo.orderable
mo = assigns(:milktea_orderable).
flash
c
orderable.buyable.milktea_addons
orderable.buyable.milktea
orderable.buyable
orderable
c
flash
c
flash
c
@dish.orderables
c
Orderable.all
@dish.orderables
@dish
c
Orderable.all
@dish.orderables
@dish
c
dish.orderables
dish.buyables
dish.orderables
dish.dish_category
dish.orderables
orderables(:two).buyable
orderables(:two)
dish.orderables
c
dish.orderables
c
r.errors
r = assigns(:recipe)
c
r.valid?
params
r.errors
r = assigns(:recipe)
c
Orderable.all
obj.orderables.each(&target_state)
obj.orderables.each(&:target_state)
target_state
obj.orderables.size
obj.orderables
obj
c
Recipe.first.orderables.first.ownable.user
Recipe.first.orderables.first.ownable
Recipe.first.orderables.first
Recipe.first.orderables
Recipe.first.class == Dish
Recipe.first.class == Dish?
Recipe.first.class
Recipe.first
orderable_one.reload
orderable_two.reload
orderable_two
orderable_one
c
obj
c
obj
c
obj
c
obj
c
obj.class == MilkteaAddon
obj.class
obj
c
r.persisted?
r.valid?
r = assigns(:recipe)
c
d = assigns(:recipe)
@dish.reload.errors
@dish.reload.errors.full_messages.join(',')
@dish.reload.errors.full_messages
@dish.reload.error.full_messages
@dish.reload.errors.full_messages
@dish.reload.errors
@dish.reload
c
satisfaction
c
Order.satisfactions[satisfaction]
satisfaction
Order.satisfactions(satisfaction)
Order.satisfactions.index(satisfaction.to_sym)
Order.satisfactions
c
flash
c
milktea_orderable
flash
c
@milktea
flash
milktea_orderable
c
flash
milktea_orderable
c
@shopper.
milktea_orderable
c
milktea_orderable
c
assigns(:orderable)
assigns(:milktea_orderable)
milktea_orderable
c
@milktea_orderable.orderable
@milktea_orderable
c
@milktea_orderable
c
@milktea_orderable.orderable
@milktea_orderable
c
x
flash
c
@order
c
@payment_error
c
payment
c
@payment_error
c
q
e.message
e.messages
e.messagems
e.instance_variables
e.instance_methods
e.msg
e
c
@milktea_orderable
q
orderable.buyable
orderable
@milktea_orderable
c
@shopper
SESSION
COOKIE
COOKIES
current_user
template
request
flash
@shopper
c
